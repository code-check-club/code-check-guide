[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Code Review Guide",
    "section": "",
    "text": "Reproducibility checks\nEveryone will inevitably make mistakes. We should have a system to catch them\n\n\n\n\n\nLack of time\nNot seen as a priority\nLack of expertise\nEmbarrassed for others to see their code\nLack of incentives - error-mitigating procedures are weakly related to chances of publishing\nErrors might be noticed, leading to retractions and corrections.\n\n\n\n\n\nTime: help to prioritise review tasks for allotted time\nPriority: clearly explain how review makes science better\nExpertise: explain what type of code check can be done at different levels of expertise; signpost resources for developing appropriate expertise\nEmbarrassment: tips for code writers to make them more confident about showing their work to others\nHow to give and get credit for code review\nIncrease and diversify the pool of potential reviewers\n\n\n\n\n\n\n\n\nNovice to intermediate experience with research code (you should at least be able to write an analysis script in the language you’re checking)\nMainly end users, no assumption of a computer science background\nNo assumption that you know git/github\nCoding language agnostic (but examples in R and python?)\n\n\n\n\n\nCode reviewers\nCode writers to prep code for others to review\nChecklist for self-check (when others don’t have time/expertise)\n\n\n\n\n\n\n\n\n\nCan a researcher who uses that language run it easily, are any unusual or complex procedures explained?\n\n\n\nDo you get the same outputs? Is it straightforward to check them?\n\n\n\nEven if you don’t have the expertise to assess the stats or data processing, is the code well-organised enough to figure out what is intended so mistakes could be detected? Are the outputs sufficiently detailed to allow interrogation?\n\n\n\nIs there too much repeated code that could benefit from modularisation? DRY (Don’t repeat yourself) and SPOT (Single Point of Truth)? Are the outputs of long processes saved and loaded from file? Are there unit tests? Do the variable names make sense? Do the results match what is shown in the output and there is no rounding up or down?\n\n\n\nIs the code actually doing what is intended? Is what is intended correct? Some logical problems can be caught without domain knowledge, such as intending to to filter out male subjects, but actually filtering them IN. Many other problems require domain and/or statistical knowledge, so may only be appropriate in some circumstances.\n\n\n\n\n\n\nDo not submit code that doesn’t run for you\n\n\n\nDon’t expect the reviewer to create code for you\n\n\n\nDo not rely on code check to assess the appropriateness of your scientific decisions or statistical analyses\n\n\n\n\n\nMain focus on the first 3 goals above (runnable, reproducible, auditable)\nMaybe best practices in an appendix?\nWe won’t focus much on the last one, as it requires stats/domain knowledge\n\n\n\n\n\nYou can go through the Checklists for different situations. Each step is linked to further explanation in the Topics section is a step is unfamiliar to you."
  },
  {
    "objectID": "discussion.html",
    "href": "discussion.html",
    "title": "7  Discussion",
    "section": "",
    "text": "Funders and journals don’t encourage/enforce it\nUniversities/PIs don’t budget time and resources for it\nReviewers sometimes being discouraged by editors in code checking\nStructural barriers in NON–WEIRD countries: no financial resources to attend courses → self-taught how to program; English is not a mother language —> self-taught (tutorials are usually in English)"
  },
  {
    "objectID": "discussion.html#social-barriers",
    "href": "discussion.html#social-barriers",
    "title": "7  Discussion",
    "section": "7.2 Social barriers",
    "text": "7.2 Social barriers\n\nFear of judgment"
  },
  {
    "objectID": "discussion.html#how-to-set-up-a-code-check-club",
    "href": "discussion.html#how-to-set-up-a-code-check-club",
    "title": "7  Discussion",
    "section": "7.3 How to set up a code check club",
    "text": "7.3 How to set up a code check club"
  },
  {
    "objectID": "contributors.html",
    "href": "contributors.html",
    "title": "Appendix B — Contributions",
    "section": "",
    "text": "Lisa DeBruine (lisa.debruine@glasgow.ac.uk) - rstats, web coding (js, php), very little python (not averse, just don’t have time to fall down that rabbit hole), psychology, big team science, open science, advising the APA editors on open code\nCourtney Hilton (courtneyhilton@g.harvard.edu) - rstats, web coding (js, jsPsych, React, html/css, etc), a little python, a little matlab, psychology of music/language, online citizen science methods\nSteven Weisberg (stevenweisberg@ufl.edu) - python (Psychopy, scipy, pandas, etc.), Unity3d, some rstats and Matlab, some bash, fMRI (nipype, FSL), psychology, neuroscience, spatial navigation, virtual reality\nKaija Gahm (kgahm@ucla.edu) - rstats, a tiny bit of matlab and python. Carpentries instructor. Open science (on the board for SORTEE, an open/reproducible science society for ecology/evolution). Research interests in behavioral ecology, movement ecology, animal behavior.\nEmily Kothe (emily.kothe@deakin.edu.au) - rstats, web coding (php, html/css), some scripting in Inquisit/ePrime etc, health/environmental/social psychology.\nEdward Ivimey-Cook (e.ivimeycook@gmail.com) - rstats. Chair of SORTEE conference. Research interests in ageing.\nEirini Zormpa (ezormpa@turing.ac.uk) - rstats, psychology, linguistics, open science, reproducibility\nDamie Pak (dp495@cornell.edu) - rstats, theoretical ecology (mathematical modeling and data analysis in pest and disease systems)\nAlexandre Courtiol (alexandre.courtiol@gmail.com) - rstats, rare usage of “C, C++, Python, Java, Delphi”, stats analyses, agent based model, modeling, evolution/ecology/demography, animal behaviour, human evolution, wildlife conservation.\nHao Ye (haoye@ufl.edu) - rstats (in a past life: matlab, C++, lisp/scheme), open science & reproducibility, editor @ Methods in Ecology & Evolution, reviewer @ JOSS\nMartina Sladekova (m.sladekova@sussex.ac.uk) - rstats and some python; psychology, meta-science, quantitative methods, reproducibility.\nEkaterina Pronizius (ekaterina.pronizius@univiea.ac.at) - rstats, matlab, spm12, SPSS, neuro-psychology, big team science, meta-science, open science, reproducibility.\nLisa Levinson (lisalev@umich.edu) - rstats, linguistics, psycholinguistics, web-based reaction time research, undergraduate research mentorship and training, a little bit of computational linguistics/language model work and collaborating with python-focused folks (mostly a python “reader”). Very interested in open science, replication, and reproducibility but early in my journey.\nJacek Buczny (jbuczny@gmail.com) - R, meta-analysis, multilevel, open science, team science, associate editor who wants to promote code/data sharing, personality psychology, teaching stats/methods\nMahmoud Elsherif (elsherim@bham.ac.uk) - Research Interests: Language processing, neurodiversity and joint attention; open scholarship and meta science, reproducibility; rstats- can help with Rmarkdown section\nClare Conry-Murray (cconrymu@sju.edu)- Rstats beginner, Research interested: moral development, Reasoning about gender and culture, research methods.\nDavid Moreau (d.moreau@auckland.ac.nz) - rstats, methods, open science, meta-analysis, reproducibility, neuroscience, psychology.\nBradley J. Baker (bradley.baker@temple.edu) - R, some Python; long disused background in computer science (C, PERL). Research interest in sport consumer behavior with secondary area in research methods and metascience.\nAndrew Stewart (andrew.stewart@manchester.ac.uk) - mostly R, some Python, a little bash. Big fan of Docker/Binder to capture the computational environment (system level as well as R/Python versions and package versions) - also Clean Code principles, Psychology, Open and Reproducible Research, topic editor @ JOSS\nDylan Gomes (Dylan.GE.Gomes@gmail.com) - lots of R/Rmd, regular git/GitHub user, some matlab, a little python. Open science advocate (two SORTEE, see above, committees). Quantitative ecologist.\nUtek (utek@outlook.com) - Amateur R user, trying to integrate more Rmd into my workflow, and recent git CLI convert. Research interests: personality, psychopathology, and treatment adherence. Hope I will contribute something meaningful and learn something along the way :)\nGustav Nilsonne (gustav.nilsonne@ki.se) - R, open science, reproducibility, metascience, systematic quality control. Long experience of making errors and trying to detect and mitigate them. Interested in how to structurally integrate error-reducing elements into academic workflows.\nSaeed Shafiei Sabet (saeedfisheries@gmail.com) - Using R for soundscapes visualizations. Research interests: Bioacoustics, sound impacts, antipredator behaviour, swimming activities, stress, animal behaviour, fish, crustaceans.\nBo Yao (b.yao1@lancaster.ac.uk) - CogNeuro of Language and Psycholinguistics. Using R notebook for data and code sharing for research (tidyverse, lme4, brms). Coding experience includes mainly R and MatLab. Does a little python and java for building online experiments only.\nGairan Pamei (pamei-gairan@link.cuhk.edu.hk)- R stats beginner (a big time struggler). Research interests: Literacy and Language Development, Research Methods and Metascience\n\nAna Martinovici (martinovici@rsm.nl) - experience with: R, Stan, R Markdown, Bash, Git, Make. I can use python (using Reticulate in RStudio), Matlab, basic JS, and MPlus but at a lower level of proficiency compared to R. I do research on the role of attention in decision making, so I have experience with eye-tracking data and choice modeling. I have experience teaching students how to use version control, R, and collect data via APIs (Twitter).\nLuiza Andrade (luiza.c.andrade@gmail.com) - rstats, git, Stata, some Python. Development economics, research transparency - have been running reproducibility checks for working papers and organizing code review session for ~5 years"
  }
]