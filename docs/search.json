[
  {
    "objectID": "index.html#what-is-code-check",
    "href": "index.html#what-is-code-check",
    "title": "Code Check Guide",
    "section": "\n1.1 What is code check?",
    "text": "1.1 What is code check?\n\n1.1.1 Why is it important?\n\nReproducibility checks\nEnsure the correct analysis is conducted and follows methodology\nEveryone will inevitably make mistakes. We should have a system to catch them\n\n1.1.2 Why don’t people do it?\n\nLack of time\nNot seen as a priority\nLack of expertise\nEmbarrassed for others to see their code\nLack of incentives - error-mitigating procedures are weakly related to chances of publishing\nErrors might be noticed, leading to retractions and corrections.\n\n1.1.3 What specific problems does this guide address?\n\nTime: help to prioritise review tasks for allotted time\nPriority: clearly explain how review makes science better\nExpertise: explain what type of code check can be done at different levels of expertise; signpost resources for developing appropriate expertise\nEmbarrassment: tips for code writers to make them more confident about showing their work to others\nHow to give and get credit for code review\nIncrease and diversify the pool of potential reviewers"
  },
  {
    "objectID": "index.html#who-is-this-guide-for",
    "href": "index.html#who-is-this-guide-for",
    "title": "Code Check Guide",
    "section": "\n1.2 Who is this guide for?",
    "text": "1.2 Who is this guide for?\n\n1.2.1 Expertise\n\nNovice to intermediate experience with research code (you should at least be able to write an analysis script in the language you’re checking)\nMainly end users, no assumption of a computer science background\nNo assumption that you know git/github\nCoding language agnostic (but examples in R and python?)\n\n1.2.2 Roles\n\nCode reviewers\nCode writers to prep code for others to review\nChecklist for self-check (when others don’t have time/expertise)"
  },
  {
    "objectID": "index.html#what-are-the-goals",
    "href": "index.html#what-are-the-goals",
    "title": "Code Check Guide",
    "section": "\n1.3 What are the goals?",
    "text": "1.3 What are the goals?\n\n1.3.1 Goals of code checking in general\n\n1.3.1.1 Does it run?\nCan a researcher who uses that language run it easily, are any unusual or complex procedures explained?\n\n1.3.1.2 Is it reproducible?\nDo you get the same outputs? Is it straightforward to check them?\n\n1.3.1.3 Is it auditable/understandable?\nEven if you don’t have the expertise to assess the stats or data processing, is the code well-organised enough to figure out what is intended so mistakes could be detected? Are the outputs sufficiently detailed to allow interrogation?\n\n1.3.1.4 Does it follow best practices?\nIs there too much repeated code that could benefit from modularisation? DRY (Don’t repeat yourself) and SPOT (Single Point of Truth)? Are the outputs of long processes saved and loaded from file? Are there unit tests? Do the variable names make sense? Do the results match what is shown in the output and there is no rounding up or down?\n\n1.3.1.5 Is it correct and appropriate?\nIs the code actually doing what is intended? Is what is intended correct? Some logical problems can be caught without domain knowledge, such as intending to to filter out male subjects, but actually filtering them IN. Many other problems require domain and/or statistical knowledge, so may only be appropriate in some circumstances.\n\n1.3.2 What are NOT goals of code check\n\n1.3.2.1 Debugging\nDo not submit code that doesn’t run for you\n\n1.3.2.2 Code Help\nDon’t expect the reviewer to create code for you\n\n1.3.2.3 Stats Consulting\nDo not rely on code check to assess the appropriateness of your scientific decisions or statistical analyses\n\n1.3.3 Goals in this guide\n\nMain focus on the first 3 goals above (runnable, reproducible, auditable)\nMaybe best practices in an appendix?\nWe won’t focus much on the last one, as it requires stats/domain knowledge"
  },
  {
    "objectID": "index.html#how-to-use-this-guide",
    "href": "index.html#how-to-use-this-guide",
    "title": "Code Check Guide",
    "section": "\n1.4 How to use this guide",
    "text": "1.4 How to use this guide"
  },
  {
    "objectID": "discussion.html#structural-barriers",
    "href": "discussion.html#structural-barriers",
    "title": "7  Discussion",
    "section": "7.1 Structural barriers",
    "text": "7.1 Structural barriers\n\nFunders and journals don’t encourage/enforce it\nUniversities/PIs don’t budget time and resources for it\nReviewers sometimes being discouraged by editors in code checking\nStructural barriers in NON–WEIRD countries: no financial resources to attend courses → self-taught how to program; English is not a mother language —> self-taught (tutorials are usually in English)"
  },
  {
    "objectID": "discussion.html#social-barriers",
    "href": "discussion.html#social-barriers",
    "title": "7  Discussion",
    "section": "7.2 Social barriers",
    "text": "7.2 Social barriers\n\nFear of judgment"
  },
  {
    "objectID": "discussion.html#how-to-set-up-a-code-check-club",
    "href": "discussion.html#how-to-set-up-a-code-check-club",
    "title": "7  Discussion",
    "section": "7.3 How to set up a code check club",
    "text": "7.3 How to set up a code check club"
  }
]